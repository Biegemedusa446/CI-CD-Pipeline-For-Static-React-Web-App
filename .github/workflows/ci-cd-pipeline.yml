name: CI/CD Pipeline

on:
  push:
    branches:
      - development
      - staging
      - main

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install Dependencies
      - name: Install Dependencies
        working-directory: ./my-react-app
        run: npm install

      # Step 4: Install SonarScanner
      - name: Install SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          mv sonar-scanner-4.8.0.2856-linux sonar-scanner
          echo "PATH=$PATH:$GITHUB_WORKSPACE/sonar-scanner/bin" >> $GITHUB_ENV

      # Step 5: Verify SonarScanner Installation
      - name: Verify SonarScanner
        run: sonar-scanner --version

      # Step 6: Run SonarQube Analysis
      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./my-react-app
        run: |
          sonar-scanner \
            -Dsonar.projectBaseDir=./ \
            -Dsonar.projectKey=Automated-Static-Website-Deployment-Using-React-and-GitHub-Actions \
            -Dsonar.sources=src \
            -Dsonar.exclusions=**/node_modules/**,**/*.test.js,**/build/** \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install Dependencies
      - name: Install Dependencies
        working-directory: ./my-react-app
        run: npm install

      # Step 3: Build Application
      - name: Build React Application
        working-directory: ./my-react-app
        run: npm run build

      # Step 4: Deploy to Netlify
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: ./my-react-app/build
          production-deploy: true
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install Dependencies
      - name: Install Dependencies
        working-directory: ./my-react-app
        run: npm install

      # Step 3: Build Application
      - name: Build React Application
        working-directory: ./my-react-app
        run: npm run build

      # Step 4: Deploy to Netlify
      - name: Deploy to Staging on Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: ./my-react-app/build
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.STAGING_NETLIFY_SITE_ID }}

name: CI/CD Pipeline

on:
  push:
    branches:
      - development
      - staging
      - main

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -s http://localhost:9000/api/system/health | grep -q 'GREEN'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Install Dependencies
    - name: Install Dependencies
      run: npm install

    # Step 4: Wait for SonarQube to Start
    - name: Wait for SonarQube
      run: |
        for i in {1..30}; do
          curl -s http://localhost:9000/api/system/health | grep -q 'GREEN' && break
          echo "Waiting for SonarQube to be ready..."
          sleep 5
        done

    # Step 5: Run SonarQube Analysis
    - name: Run SonarQube Analysis
      env:
        SONAR_HOST_URL: http://localhost:9000
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      working-directory: ./my-react-app
      run: |
        sonar-scanner \
          -Dsonar.projectKey=Automated-Static-Website-Deployment-Using-React-and-GitHub-Actions \
          -Dsonar.sources=src \
          -Dsonar.exclusions=**/node_modules/**,**/*.test.js,**/build/** \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

    # Step 6: Trivy Dependency Scanning
    - name: Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: node:16 # Replace with your Node.js version

  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Install Dependencies
    - name: Install Dependencies
      run: npm install

    # Step 3: Build Application
    - name: Build React Application
      run: npm run build

    # Step 4: Deploy to Netlify
    - name: Deploy to Netlify
      run: npx netlify-cli deploy --dir=./build --prod
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
